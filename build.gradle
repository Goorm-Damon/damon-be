plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

test {
	finalizedBy jacocoTestReport // 테스트 종료후 항상 리포트 생성
}

jacocoTestReport {
	dependsOn test // 리포트 생성을 위해서는 test가 먼저 완료되어야 함
}


group = 'damon'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' // lombok test
	testAnnotationProcessor 'org.projectlombok:lombok' // lombok test

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // swagger
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' // query log
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // date type to json
	implementation 'com.google.code.gson:gson:2.9.1' // json converter

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	implementation 'software.amazon.awssdk:s3:2.24.3' // aws S3

	implementation 'org.springframework.boot:spring-boot-starter-actuator' // actuator
	implementation 'io.micrometer:micrometer-registry-prometheus'	// prometheus

  //Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'	// redis
	implementation 'org.springframework.boot:spring-boot-starter-websocket'	// websocket
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0' // date type to json
	implementation 'com.fasterxml.jackson.core:jackson-databind' // json converter
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

clean {
	delete file('src/main/generated')
}