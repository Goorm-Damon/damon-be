name: 개발서버에 배포

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest # 작업이 실행될 환경
    steps:
    - name: 체크아웃
      uses: actions/checkout@v3
    - name: JDK 17 사용
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Gradle Wrapper 실행 권한 추가
      run: chmod +x gradlew
    - name: Gradle로 빌드(CI)
      run: |
        ./gradlew build \
          -Dspring.config.location=$SPRING_CONFIG_LOCATION
      env:
        SPRING_CONFIG_LOCATION: src/main/resources/application-dev.properties
    - name: 도커허브에 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER_NAME }}
        password: ${{ secrets.DOCKER_USER_PW }}
    - name: 이미지 빌드
      run: docker build -t ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:dev .
    - name: 도커허브에 이미지 푸시
      run: docker push ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:dev
    - name: AWS EC2에 ssh 접속 후 배포
      uses: appleboy/ssh-action@master     
      with:
        host: ${{ secrets.AWS_DEV_IP }}
        port: ${{ secrets.AWS_PORT }}
        username: ${{ secrets.AWS_USER_NAME }}
        key: ${{ secrets.AWS_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:dev
          docker-compose up -d